<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kartik Nagar</title>
    <link>/</link>
      <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <description>Kartik Nagar</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Tue, 28 Jul 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>Kartik Nagar</title>
      <link>/</link>
    </image>
    
    <item>
      <title>Lectures</title>
      <link>/courses/apv/lectures/</link>
      <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/courses/apv/lectures/</guid>
      <description>&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Topic&lt;/th&gt;
&lt;th&gt;Date(s)&lt;/th&gt;
&lt;th&gt;References/Additional Reading&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://kartiknagar.github.io/files/apv/Introduction.pdf&#34;&gt;Introduction&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;7/9&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.cs.cmu.edu/~crary/819-f09/Hoare69.pdf&#34;&gt;Hoare&amp;rsquo;s Paper&lt;/a&gt;. &lt;a href=&#34;https://www.cis.upenn.edu/~alur/CIS673/Spring20/673Intro.pptx&#34;&gt;Intro Slides of Rajeev Alur&amp;rsquo;s Course on Computer Aided Verification&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://kartiknagar.github.io/files/apv/PL-Intro.pdf&#34;&gt;Propositional Logic: Introduction&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;8/9&lt;/td&gt;
&lt;td&gt;BM Section 1.1-1.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://kartiknagar.github.io/files/apv/PL-DPLL.pdf&#34;&gt;Propositional Logic: DPLL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;9/9, 11/9&lt;/td&gt;
&lt;td&gt;BM Section 1.6-1.7. &lt;a href=&#34;http://www.cs.utexas.edu/~isil/cs389L/lecture3-6up.pdf&#34;&gt;Slides on CDCL-based SAT Solvers from Isil Dillig&amp;rsquo;s Course&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://kartiknagar.github.io/files/apv/FOL-Intro.pdf&#34;&gt;First Order Logic: Introduction&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;11/9&lt;/td&gt;
&lt;td&gt;BM Section 2.1-2.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://kartiknagar.github.io/files/apv/FOL-Validity.pdf&#34;&gt;First Order Logic: Validity&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;14/9&lt;/td&gt;
&lt;td&gt;BM Section 2.3,2.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://kartiknagar.github.io/files/apv/SMT-Intro.pdf&#34;&gt;Satisfiability Modulo Theories: Introduction&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;15/9&lt;/td&gt;
&lt;td&gt;BM Section 3.1,3.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://kartiknagar.github.io/files/apv/SMT-Theories.pdf&#34;&gt;Satisfiability Modulo Theories: Theories&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;16/9,18/9&lt;/td&gt;
&lt;td&gt;BM Section 3.2,3.3,3.6,3.8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://kartiknagar.github.io/files/apv/FOL-Compactness.pdf&#34;&gt;First Order Logic: Compactness&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;21/9&lt;/td&gt;
&lt;td&gt;BM Section 2.7.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://kartiknagar.github.io/files/apv/SMT-BMC.pdf&#34;&gt;Satisfiability Modulo Theories: Bounded Model Checking&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;22/9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://kartiknagar.github.io/files/apv/Verification-Intro.pdf&#34;&gt;Z3 + Deductive Verification: Introduction&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;23/9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://kartiknagar.github.io/files/apv/Operational-Semantics.pdf&#34;&gt;Operational Semantics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;28/9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://kartiknagar.github.io/files/apv/Operational-Semantics-FOL.pdf&#34;&gt;Operational Semantics in FOL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;29/9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;video-lectures&#34;&gt;Video Lectures&lt;/h1&gt;
&lt;p&gt;Link to Google Drive Folder containing all videos: &lt;a href=&#34;https://drive.google.com/drive/folders/1JBOEm-YRIcVHumC-rNXJE1SIhpPOWkgd?usp=sharing&#34;&gt;APV Lectures&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Personal</title>
      <link>/personal/</link>
      <pubDate>Tue, 28 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/personal/</guid>
      <description>&lt;p&gt;I am an avid reader (mostly fiction). I diligently keep track of all of my books at my &lt;a href=&#34;https://www.goodreads.com/user/show/12401936-kartik-nagar&#34;&gt;Goodreads Account&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Automated Reasoning for Replicated Systems</title>
      <link>/project/replicated-systems/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/project/replicated-systems/</guid>
      <description>&lt;p&gt;For global-scale applications such as Amazon, Twitter, Facebook, etc. with users distributed across the world, in order to provide a uniform low-latency and always available service, the application data needs to replicated at multiple servers across the world. Such replicated systems also facilitate other useful properties such as better scalability and fault tolerance, but they are very hard to program since they offer a completely different memory model to the programmers. Since the same data at different replicas can be concurrently updated and the updates can be applied in different orders at different replicas, this can result in subtle concurrency bugs for the applications running on top of replicated systems which can be hard to find through testing-based approaches. In this project, we proposed a number of automated verification techniques to reason about correctness of programs running on top of replicated systems.&lt;/p&gt;
&lt;h2 id=&#34;representative-publications&#34;&gt;Representative Publications:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;/publication/cav20/&#34;&gt;Semantics, Specification and Automated Verification of Concurrent Libraries in Replicated Systems&lt;/a&gt;. Kartik Nagar, Prasita Mukherjee and Suresh Jagannathan. &lt;em&gt;CAV 20&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/publication/oopsla19/&#34;&gt;CLOTHO : Directed Test Generation for Weakly Consistent Database Systems&lt;/a&gt;.
Kia Rahmani, Kartik Nagar, Benjamin Delaware and Suresh Jagannathan. &lt;em&gt;OOPSLA 19&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/publication/cav19/&#34;&gt;Automated Parameterized Verification of CRDTs&lt;/a&gt;.
Kartik Nagar and Suresh Jagannathan. &lt;em&gt;CAV 19&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/publication/concur18/&#34;&gt;Automated Detection of Serializability Violations under Weak Consistency&lt;/a&gt;.
Kartik Nagar and Suresh Jagannathan. &lt;em&gt;CONCUR 18&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/publication/popl18/&#34;&gt;Alone Together: Compositional Reasoning and Inference for Weak Isolation&lt;/a&gt;.
Gowtham Kaki, Kartik Nagar, Mahsa Najafzadeh and Suresh Jagannathan. &lt;em&gt;POPL 18&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Semantics, Specification and Bounded Verification of Concurrent Libraries in Replicated Systems</title>
      <link>/publication/cav20/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/publication/cav20/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CLOTHO : Directed Test Generation for Weakly Consistent Database Systems</title>
      <link>/publication/oopsla19/</link>
      <pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/publication/oopsla19/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Automated Parametrized Verification of CRDTs</title>
      <link>/publication/cav19/</link>
      <pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/publication/cav19/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Automated Detection of Serializability Violations under Weak Consistency</title>
      <link>/publication/concur18/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      <guid>/publication/concur18/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Alone together: Compositional Reasoning and Inference for Weak Isolation</title>
      <link>/publication/popl18/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      <guid>/publication/popl18/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Refining Cache Behaviour Prediction using Cache Miss Paths</title>
      <link>/publication/tecs17/</link>
      <pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate>
      <guid>/publication/tecs17/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Fast and Precise Worst Case Interference Placement for Shared Cache Analysis</title>
      <link>/publication/tecs16/</link>
      <pubDate>Fri, 01 Jul 2016 00:00:00 +0000</pubDate>
      <guid>/publication/tecs16/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Timing Analysis for Real-time Systems</title>
      <link>/project/timing-analysis/</link>
      <pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate>
      <guid>/project/timing-analysis/</guid>
      <description>&lt;p&gt;In Real-time systems, e.g. automobiles, aircrafts, space shuttles, robots, etc. programs are executed in response to external stimuli and must finish their execution before fixed deadlines to ensure correct behavior. Hence, Worst Case Execution Time (WCET) becomes a very important correctness criterion for programs running on real-time systems. In this project, we proposed static analysis techniques to determine the WCET of programs, chiefly focusing on the impact of caches on timing of programs.&lt;/p&gt;
&lt;h2 id=&#34;representative-publications&#34;&gt;Representative Publications&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;/publication/tecs17/&#34;&gt;Refining Cache Behaviour Prediction using Cache Miss Paths&lt;/a&gt;.
Kartik Nagar and YN Srikant. &lt;em&gt;TECS 17&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;/publication/tecs16/&#34;&gt;Fast and Precise Worst Case Interference Placement for Shared Cache Analysis&lt;/a&gt;.
Kartik Nagar and YN Srikant. &lt;em&gt;TECS 16&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;/publication/vmcai15/&#34;&gt;Path-sensitive Cache Analysis using Cache Miss Paths&lt;/a&gt;.
Kartik Nagar and YN Srikant. &lt;em&gt;VMCAI 15&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;/publication/rtas14/&#34;&gt;Precise Shared Cache Analysis using Optimal Interference Placement&lt;/a&gt;.
Kartik Nagar and YN Srikant. &lt;em&gt;RTAS 14&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;/publication/memocode-12/&#34;&gt;Interdependent Cache Analyses for better Precision and Safety&lt;/a&gt;.
Kartik Nagar and YN Srikant. &lt;em&gt;MEMOCODE 12&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Path-sensitive Cache Analysis using Cache Miss Paths</title>
      <link>/publication/vmcai15/</link>
      <pubDate>Thu, 01 Jan 2015 00:00:00 +0000</pubDate>
      <guid>/publication/vmcai15/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Precise Shared Cache Analysis using Optimal Interference Placement</title>
      <link>/publication/rtas14/</link>
      <pubDate>Tue, 01 Apr 2014 00:00:00 +0000</pubDate>
      <guid>/publication/rtas14/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Interdependent Cache Analyses for better precision and safety</title>
      <link>/publication/memocode-12/</link>
      <pubDate>Sun, 01 Jul 2012 00:00:00 +0000</pubDate>
      <guid>/publication/memocode-12/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
